package {{apiPackage}}

import io.ktor.server.application.*
import io.ktor.server.routing.*

interface {{classname}} {

{{#operations}}
{{#operation}}
    suspend fun {{#lambda.lowercase}}{{httpMethod}}{{/lambda.lowercase}}{{#lambda.convert_path_to_fun}}{{path}}{{/lambda.convert_path_to_fun}}(call: ApplicationCall)
{{/operation}}
{{/operations}}
}

{{#operations}}
{{#featureLocations}}
{{/featureLocations}}
fun Route.{{#lambda.camelcase}}{{classname}}{{/lambda.camelcase}}(api: {{classname}}) {
{{#operation}}
    {{#hasAuthMethods}}
        {{#authMethods}}
            authenticate("{{{name}}}") {
        {{/authMethods}}
    {{/hasAuthMethods}}
    {{^featureLocations}}
    {{#lambda.lowercase}}{{httpMethod}}{{/lambda.lowercase}}("{{path}}") {
        api.{{#lambda.lowercase}}{{httpMethod}}{{/lambda.lowercase}}{{#lambda.convert_path_to_fun}}{{path}}{{/lambda.convert_path_to_fun}}(call)
    }
    {{/featureLocations}}
    {{#hasAuthMethods}}
            }
    {{/hasAuthMethods}}
{{/operation}}
}
{{/operations}}
