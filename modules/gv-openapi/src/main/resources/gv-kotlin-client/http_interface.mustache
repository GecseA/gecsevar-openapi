package {{apiPackage}}

import io.ktor.client.*
import io.ktor.client.call.*
import io.ktor.client.plugins.*
import io.ktor.client.plugins.auth.*
import io.ktor.client.plugins.auth.providers.*
import io.ktor.client.plugins.contentnegotiation.*
import io.ktor.client.plugins.logging.*
import io.ktor.client.request.*
import io.ktor.client.request.forms.*
import io.ktor.client.statement.*
import io.ktor.http.*
import io.ktor.serialization.kotlinx.json.*
import kotlin.native.concurrent.ThreadLocal

import io.ktor.client.statement.HttpResponse
import io.ktor.http.Url

interface HttpInterface {

@Throws(Exception::class)
suspend fun post(url: Url, body: String): HttpResponse
@Throws(Exception::class)
suspend fun get(url: Url): HttpResponse
@Throws(Exception::class)
suspend fun patch(url: Url)
@Throws(Exception::class)
suspend fun delete(url: Url)
}