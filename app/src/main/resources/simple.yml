openapi: 3.0.3
info:
  title: GecseVa'r Admin Framework - OpenAPI 3.0
  description: |
    Some useful links:
    - [The repository](https://github.com/GecseA)
    - [The source API definition](https://github.com/../openapi.yaml)

  termsOfService: https://gecsevar.hu/terms/
  contact:
    email: gecsevar@gmail.hu
  license:
    name:  license
    url: https://www.gecsevar.hu/licenses/LICENSE-1.0.html
  version: 1.0.0
externalDocs:
  description: Find out more
  url: https://www.gecsevar.hu
servers:
  - url: https://api.gecsevar.hu/
tags:
  - name: Test 1
    description: Main testing paths, params etc.
paths:
  /first/tests/{id}/{name}:
    get:
      operationId: getFirstTestByIdAndName
      tags:
        - Test 1
      parameters:
        - name: id
          in: path
          description: An ID as a number
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          description: A NAME as a string
          required: true
          schema:
            type: string
      description: Get a test
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestDto1"
  /second/tests/{id}/{name}:
    get:
# missing      operationId: getFirstTestByIdAndName
      tags:
        - Test 1
      parameters:
        - name: id
          in: path
          description: An ID as a number
          required: true
          schema:
            type: integer
            format: int32
        - name: name
          in: path
          description: A NAME as a string
          required: true
          schema:
            type: string
      description: Get a test
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestDto1"
  /third/tests/datas:
    get:
      tags:
        - Test 1
      parameters:
        - name: id
          in: query
          description: ''
          required: false
          schema:
            type: string
        - name: path
          in: query
          description: ''
          required: true
          schema:
            type: string
      description: Another test
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TestDto1"

components:
  schemas:
    TestDto1:
      type: object
      required:
        - id
        - myBool
        - myString
        - myStringId
        - aDateTime
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
        myBool:
          type: boolean
          description: Quite nice description for myBool
        myString:
          type: string
        myStringId:
          type: string
# TODO          format: uuid
        myNumber:
          type: integer
          format: int32
        myNumber2:
          type: integer
          format: int64
        aDateTime:
          type: string
          format: date-time
        aDate:
          type: string
          format: date
        aTime:
          type: string
          format: time
        myEnum:
          type: string
          enum:
            - MY_ENUM_1
            - MY_ENUM_2
            - MY_ENUM_3
        myArray:
          type: array
          items:
            type: string
    TestDto2:
      type: object
      required:
        - id
        - name
        - active
        - description
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
        name:
          type: string
          description: Quite nice description for name
        active:
          type: boolean
        articleId:
          type: integer
          format: int32
        articleTitle:
          type: string
    FileContainerModel:
      type: object
      required:
        - id
        - basePath
        - path
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
        basePath:
          type: string
        path:
          type: string
    MenuItemModel:
      type: object
      required:
        - id
        - label
        - level
        - linkType
        - articleId
        - articleCategoryId
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
        label:
          type: string
        level:
          type: string
        linkType:
          $ref: '#/components/schemas/MenuLinkType'
        articleId:
          type: integer
          format: int32
          default: -1
          description: Can't be null, it will be UNDEFINED on web and MUI elements lost control
        articleCategoryId:
          type: integer
          format: int32
          default: -1
          description: Can't be null, it will be UNDEFINED on web and MUI elements lost control
    MenuLinkType:
      type: string
      enum:
        - NONE
        - ARTICLE
        - CATEGORY
    FileModel:
      type: object
      required:
        - id
        - pathId
        - path
        - name
        - type
        - meta
        - usages
        - usageArticleIds
      properties:
        id:
          $ref: "#/components/schemas/ResourceId"
        pathId:
          $ref: "#/components/schemas/ResourceId"
        path:
          type: string
        name:
          type: string
        type:
          type: string
        meta:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
        usages:
          type: integer
          format: int32
        usageArticleIds:
          type: array
          items:
            $ref: "#/components/schemas/ResourceId"
    MenuButtonModel:
      type: object
      required:
        - title
        - route
        - element
      properties:
        title:
          type: string
        route:
          type: string
        element:
          type: string
        validFrom:
          type: string
          format: date-time
        validTo:
          type: string
          format: date-time
    ResourceId:
      type: integer
      format: int32
    ResponseErrorCodes:
      type: string
      enum:
        - ARTICLE_DUPLICATE_SLUG
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access
